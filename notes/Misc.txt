For global data T
	static mut storage: Mutex<Option<T>> = Mutex::new(None);
	static AtomicPtr<T> ptr = 0;

	fn get_or_init() -> &T {
		if ptr != NULL {
			return ptr;
		}
		s = storage.lock();
		if s.is_some() {
			return s.ptr();
		}
		s = Some(init_data());
		return s.ptr();
	}

Compare disassembler with llvm-mc

Capstone header generation:
	bindgen.exe capstone/install/include/capstone/capstone.h -match capstone.h -match arm.h -match arm64.h -match mips.h -match platform.h -match ppc.h -match sparc.h -match systemz.h -match xcore.h -match x86.h -static-link capstone -o capstone/capstone.rs
	bindgen.exe capstone/install/include/capstone/capstone.h -builtins -o capstone/capstone.rs

To remove debug information from llvm-ir: opt -strip-debug